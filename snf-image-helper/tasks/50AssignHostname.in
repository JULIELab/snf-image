#! /bin/bash

# Copyright (C) 2011, 2015 GRNET S.A. and individual contributors
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

### BEGIN TASK INFO
# Provides:		AssignHostname
# RunBefore:            EnforcePersonality
# RunAfter:		InstallUnattend & FilesystemResizeMounted
# Short-Description:	Assign Hostname/Computer Name to the instance
### END TASK INFO

set -e
. "@commondir@/common.sh"

task_init_as excludable mounted_excludable overwritable

windows-legacy_hostname() {
    local target hostname sysprepinf
    target="$1"
    hostname="$2"

    check_windows_computer_name "$hostname"

    sysprepinf=$(get_sysprepinf "$target")
    if [ -z "$sysprepinf" ]; then
        log_error 'No C:\SYSPREP\SYSPREP.INF found in the instance.'
    fi

    echo -n "Assigning new computer name..."

    @scriptsdir@/handle-ini-file.py "$sysprepinf" set UserData ComputerName "$hostname"

    echo done
}

windows_hostname() {
    local target hostname unattend arch component
    target="$1"
    hostname="$2"

    check_windows_computer_name "$hostname"

    tmp_unattend=$(mktemp)
    add_cleanup rm "$tmp_unattend"

    echo -n "Assigning new computer name..."

    unattend=$(get_unattend "$target")
    if [ -z "$unattend" ]; then
        log_error "No Unattend.xml found in the instance."
    fi
    arch=$(get_windows_architecture "$target")
    if [ -z "$arch" ]; then
        log_error "Unable to determine windows architecture"
    fi

    windows_update_unattend_node "$unattend" specialize \
        "Microsoft-Windows-Shell-Setup" "$arch" ComputerName "$hostname"

    echo done
}

linux_hostname() {
    local target hostname distro
    target="$1"
    hostname="$2"

    if [ -f "$target/etc/hostname" ]; then
        echo "$hostname" > "$target/etc/hostname"
    else
        distro=$(get_base_distro "$target")
        case "$distro" in
            coreos)
                echo "$hostname" > "$target/etc/hostname";;
            redhat)
                sed -i -e "s/HOSTNAME=.*$/HOSTNAME=$hostname/g" "$target/etc/sysconfig/network";;
            slackware|suse)
                #local domain=$(sed -e 's/^[^\.]*//g' < /etc/HOSTNAME)

                # In Slackware hostname and domain name are joined together.
                # For now I will not retain the domain name.
                echo "$hostname" > "${target}/etc/HOSTNAME";;
            gentoo)
                sed -i -e "s/\(\(HOSTNAME\)\|\(hostname\)\)=.*$/\1=\"$hostname\"/" "$target/etc/conf.d/hostname";;
            arch)
                if [ -f "$target/etc/rc.conf" ]; then
                    sed -i -e "s/^HOSTNAME=.*$/HOSTNAME=\"$hostname\"/" "$target/etc/rc.conf"
                else
                    # In new versions of arch, /etc/rc.conf is missing
                    echo "$hostname" > "$target/etc/hostname"
                fi

                if grep "^127\.0\.0\.1[ \t]*" "$target/etc/hosts" > /dev/null; then
                   sed -i -e "s/127\.0\.0\.1[ \t]*.*$/127.0.0.1\t$hostname/" "$target/etc/hosts"
                else
                   echo -e "127.0.0.1\t$hostname" >> "$target/etc/hosts"
                fi;;
            *) log_error "Don't know how to assign hostname. Unknown linux distribution.";;
        esac
    fi

    # Some Linux distributions assign the hostname to 127.0.1.1 in order to be
    # resolvable to an IP address. Lets replace this if found in /etc/hosts
    if [ -f "$target/etc/hosts" ]; then
        sed -i -e "s/^[[:blank:]]*127\.0\.1\.1[[:blank:]].\+$/127.0.1.1\t$hostname/" "$target/etc/hosts"
    fi
}

freebsd_hostname() {
    local target hostname
    target="$1"
    hostname="$2"

    if grep ^hostname= "$target/etc/rc.conf"; then
        sed -i -e "s/^hostname=.*$/hostname=\"$(printf "%q" "$hostname")\"/" "$target/etc/rc.conf"
    else
        echo "hostname=\"$(printf "%q" "$hostname")\"" >> "$target/etc/rc.conf"
    fi
}

openbsd_hostname() {
    local target hostname
    target="$1"
    hostname="$2"

    echo "$hostname" > "$target/etc/myname"
}

netbsd_hostname() {
    local target hostname
    target="$1"
    hostname="$2"

    openbsd_hostname "$@"

    if grep ^hostname= "$target/etc/rc.conf"; then
        sed -i -e "s/^hostname=.*$/hostname=\"$(printf "%q" "$hostname")\"/" "$target/etc/rc.conf"
    fi
}

cloud_init_hostname() {
    local target hostname seed metadata
    target="$1"
    hostname="$2"
    seed="$(get_cloud_init_seed "$target")"
    metadata="$seed/meta-data"

    cat >> "$metadata" <<-EOF
	local-hostname: $hostname
	EOF
}


if [ ! -d "$SNF_IMAGE_TARGET" ]; then
    log_error "Target dir: \`$SNF_IMAGE_TARGET' is missing"
fi

if [ -z "$SNF_IMAGE_HOSTNAME" ]; then
    log_error "Hostname is missing"
fi

if check_yes_no SNF_IMAGE_PROPERTY_CLOUD_INIT; then
    cloud_init_hostname "$SNF_IMAGE_TARGET" "$SNF_IMAGE_HOSTNAME"
else
    ${SNF_IMAGE_PROPERTY_OSFAMILY}_hostname "$SNF_IMAGE_TARGET" "$SNF_IMAGE_HOSTNAME"
fi

exit 0

# vim: set sta sts=4 shiftwidth=4 sw=4 et ai :

