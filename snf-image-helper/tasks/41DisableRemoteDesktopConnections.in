#! /bin/bash

# Copyright (C) 2011, 2015 GRNET S.A. and individual contributors.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

### BEGIN TASK INFO
# Provides:		DisableRemoteDesktopConnections
# RunBefore:            EnforcePersonality
# RunAfter:		MountImage
# Short-Description:	Temporary Disable Remote Desktop Connections
### END TASK INFO

#
# This task will change the value of `fDenyTSConnections' registry key located
# under `HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\'
# to "true". This will disable RDP connections while the machine is being
# set up by SYSPREP upon first boot.
#
# When Setup is complete, the task ensures the value of `fDenyTSConnections'
# is not set unconditionally to False, but is re-set to its original value
# instead, thus preserving Image-specific policy of whether RDP is enabled
# or not.

set -e
. "@commondir@/common.sh"

trap task_cleanup EXIT
report_task_start

# Check if the task should be prevented from running.
check_if_excluded
check_if_mounted_excluded

if [ ! -d "$SNF_IMAGE_TARGET" ]; then
    log_error "Target directory \`$SNF_IMAGE_TARGET' is missing"
fi

# Check if the image overwrites the task
check_if_overwritten

if [ "$SNF_IMAGE_PROPERTY_OSFAMILY" != "windows" ]; then
    exit 0
fi

hive="$SNF_IMAGE_TARGET/Windows/System32/config/SYSTEM"

current=$($HIVEXGET "$hive" Select Current)
if [ "$current" = "" ]; then
    log_error "Unable to find CurrentControlSet in the registry"
fi
# Pad the value with zeros
current=$(printf "%03d" "$current")

# The current '\SYSTEM\CurrentContolSet\Control\Terminal Server' values
values=$($HIVEXGET "$hive" "ControlSet${current}\Control\Terminal Server")

# Get current value of fDenyTSConnections, if one exists
curval=$(grep ^'"fDenyTSConnections"=' <<< "$values"|cut -f2 -d:)

# Then remove it from the list of values, if present
values=$(grep -v ^'"fDenyTSConnections"=' <<< "$values")

# and readd it with a value of 1
regfile=$(mktemp)
add_cleanup rm "$regfile"

cat > "$regfile" <<EOF
Windows Registry Editor Version 5.00

[\ControlSet${current}\Control\Terminal Server]
$values
"fDenyTSConnections"=dword:00000001

EOF

$HIVEXREGEDIT --merge "$hive" "$regfile"

# Ensure the value of fDenyTSConnections is re-set
# to its original Image-specific state after Setup has completed.

# TODO: Remove any snf-image specific <RunSynchronousCommand>
# segments from unattend.xml, since this task is now self-standing.

curval=$(printf "%d" "$curval")
echo "reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /f /v fDenyTSConnections /t REG_DWORD /d $curval" >> \
    "$SNF_IMAGE_TARGET/Windows/Setup/Scripts/SetupComplete.cmd"

exit 0

# vim: set sta sts=4 shiftwidth=4 sw=4 et ai :
