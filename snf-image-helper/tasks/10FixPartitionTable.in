#! /bin/bash

# Copyright (C) 2011 GRNET S.A. 
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

### BEGIN TASK INFO
# Provides:		FixPartitionTable
# RunBefore:		FilesystemResizeUnmounted
# Short-Description:	Enlarge last partition to use all the available space
### END TASK INFO

set -e
. "@commondir@/common.sh"

# Check if the task should be prevented from running.
check_if_excluded

if [ ! -b "$SNF_IMAGE_DEV" ]; then
    log_error "Device file:\`${SNF_IMAGE_DEV}' is not a block device"
fi

table=$(get_partition_table "$SNF_IMAGE_DEV")

if [ $(get_partition_count "$table") -eq 0 ]; then
    log_error "Device: \`${SNF_IMAGE_DEV}' does not contain any partition"
fi

table_type=$(get_partition_table_type "$table")

if [ "$table_type" != "msdos" ]; then # We are planning to add gpt support
    log_error "Device: \'${SNF_IMAGE_DEV}' contains unsupported partition "
        "table type: \`$table_type'. For now only msdos partitions are supported."
fi

last_part=$(get_last_partition "$table")
last_part_id=$(cut -d':' -f1 <<< "$last_part")

if [ "$table_type" != "msdos" ]; then
    # Primary, extended and logical partitions is a concept for msdos partition
    # tables. Parted's mkpart will use part-type as partition name if applied
    # on a gpt table.
    last_part_type=""
elif [ $last_part_id -gt 4 ]; then
    last_part_type="logical"
    extended=$(get_extended_partition "$table")
    last_primary=$(get_last_primary_partition "$table")

    ext_id=$(cut -d':' -f1 <<< "$extended")
    last_prim_id=$(cut -d':' -f1 <<< "$last_primary")

    if [ "$ext_id" != "$last_prim_id" ]; then
        #Mark last primary as the last partition
        last_part="$extended"
        last_part_id="$ext_id"
        last_part_type="primary"
    else
        #enlarge the extended partition
        enlarge_partition "$SNF_IMAGE_DEV" "$extended" "extended"
    fi
elif [ $(is_extended_partition "$SNF_IMAGE_DEV" "$last_part_id") = "yes" ]; then
    last_part_type="extended"
else
    last_part_type="primary"
fi

enlarge_partition "$SNF_IMAGE_DEV" "$last_part" "$last_part_type"

# Inform the kernel about the changes
partprobe "$SNF_IMAGE_DEV"

exit 0

# vim: set sta sts=4 shiftwidth=4 sw=4 et ai :
