#!/bin/bash

# Copyright (C) 2011 GRNET S.A.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

set -e
set -o errtrace

. @osdir@/common.sh

DEFAULT_FILE="@sysconfdir@/default/snf-image-update-helper"

if [ -f "$DEFAULT_FILE" ]; then
    . "$DEFAULT_FILE"
fi

: ${HELPER_URL:="@HELPER_URL@"}

usage() {
    local rc="$1"

    cat <<EOF

Usage: $0 [options]

This script will download a suitable fixed snf-image-helper image and will
install it under $HELPER_DIR.

OPTIONS:
    -c Don't check the checksum of the helper image

    -f Force the installation even if the snf-image and helper versions don't match

    -h Print this message

    -u URL
       Download URL to use for the helper image instead of $HELPER_URL

    -y Assume Yes to all queries and do not prompt

EOF

    exit "$rc"
}

while getopts "hu:yf" opt; do
    case $opt in
        c) NO_CHECKSUM="yes"
            ;;
        f) FORCE="yes"
            ;;
        h) usage 0
            ;;
        u) HELPER_URL="$OPTARG"
            ;;
        y) NO_PROMPT="yes"
            ;;
        ?) log_error "User \`-h' for help"; exit 1
            ;;
    esac
done

cat >&1 <<EOF

$(basename $0) will download a snf-image-helper image from:
\`$HELPER_URL' and will install it under $HELPER_DIR.
The following files will be overwritten if present:
  \`$HELPER_DIR/initrd'
  \`$HELPER_DIR/kernel'
  \`$HELPER_DIR/image'
  \`$HELPER_DIR/packages'
  \`$HELPER_DIR/version'
EOF

while [[ 1 ]]; do
    echo -n "Do you want to continue [y/N]? "
    if [ "x$NO_PROMPT" = "xyes" ]; then
        echo "y";
        break;
    fi

    read answer
    [ "$(echo -n "$answer" | tr [A-Z] [a-z])" = "y" ] && break
    if [ -z "$answer" -o "$(echo -n "$answer" | tr [A-Z] [a-z])" = "n" ]; then
        log_error "Abort."
        exit 1
    fi
done

IMAGE_DIR=$(mktemp -d)
add_cleanup rmdir "$IMAGE_DIR"

cd "$IMAGE_DIR"

IMAGE=$(basename "$HELPER_URL")
echo >&2
echo "Downloading helper image from $HELPER_URL ..." >&2
add_cleanup rm -f "$IMAGE_DIR/$IMAGE"
set +e
$CURL -O -L -f "$HELPER_URL"
RET=$?
set -e

# Treat SIGPIPE as SUCCESS. There is a cURL bug that may trigger SIGPIPE even
# if the download was successful:
# http://sourceforge.net/p/curl/bugs/1180/
if [ $RET -ne 0 -a $RET -ne 141 ]; then
    log_error "Downloading "$IMAGE" from "$HELPER_URL" failed"
    exit 1
fi

if [ "x$NO_CHECKSUM" != "xyes" ]; then
    echo "Checking the helper image checksum ..." >&2
    add_cleanup rm -f "$IMAGE_DIR/$IMAGE.md5sum"
    set +e
    $CURL -O -L -f "$HELPER_URL.md5sum"
    RET=$?
    set -e

    # See above for an explanation
    if [ $RET -ne 0 -a $RET -ne 141 ]; then
        log_error "Downloading "$IMAGE.md5sum" from "$HELPER_URL.md5sum" failed"
        exit 1
    fi

    # The filename listed inside the md5sum file may be different than the one
    # of the image we have downloaded. This is due to redirections and the fact
    # that we are not using --remote-header-name which would use the
    # server-specified Content-Disposition filename instead of extracting a
    # filename from the URL. This option is not used because some versions of
    # curl will not attempt to decode %-sequences which may lead to unexpected
    # filenames. It's better if we just replace the filename inside the md5sum
    # file with the one we know.
    sed -i 's/  .\+$/'"  $IMAGE"'/' "$IMAGE_DIR/$IMAGE.md5sum"

    $MD5SUM -c "$IMAGE_DIR/$IMAGE.md5sum"
fi

cd "$HELPER_DIR"

echo >&2
echo "Extracting helper image under \`$HELPER_DIR':" >&2
tar -xvf "$IMAGE_DIR/$IMAGE"

if [ "x$FORCE" != "xyes" ]; then
    echo >&2
    echo "Checking helper image version ..." >&2
    if [ ! -f "$HELPER_DIR/version" ]; then
        log_error "File: \`$HELPER_DIR/version' is missing!"
        exit 1
    fi
    helper_version="$(<$HELPER_DIR/version)"
    if [ "x$SNF_IMAGE_VERSION" != "x$helper_version" ]; then
        log_error "snf-image version (=$SNF_IMAGE_VERSION) and " \
            "helper image version (=$helper_version) don't match!"
        log_error "Use \`-f' to bypass the version check."
        exit 1
    fi
fi

echo >&2
echo "Helper image was installed successfully!" >&2
exit 0

# vim: set sta sts=4 shiftwidth=4 sw=4 et ai :
