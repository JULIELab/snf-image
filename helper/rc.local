#!/bin/bash

# Copyright 2011 GRNET S.A. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#   1. Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# The views and conclusions contained in the software and documentation are
# those of the authors and should not be interpreted as representing official
# policies, either expressed or implied, of GRNET S.A.

. /usr/share/snf-image/common.sh

# terminate helper vm when the script exits
CLEANUP+=("telinit 0")

floppy=$(mktemp -d floppy.XXXXXXXX) || exit 1
CLEANUP+=("rm -f $floppy")

if [ -e /dev/fd0 ]; then
    mount /dev/fd0 $floppy
    source $floppy
    umount $floppy
else
    log_error "Floppy Device is not present!"
fi

# Mount the instance's partition
target=$(mktemp -d target.XXXXXXXX) || exit 1
CLEANUP+=("rm -f $target")
mount /dev/sdb $target
CLEANUP+=("umount $target")

SNF_IMAGE_TARGET=$target

RUN_PARTS=`which run-parts`
if [ -n "$RUN_PARTS" -a -n "/usr/lib/snf-image/tasks" ]; then
    set | egrep ^SNF_IMAGE_\\w+= | cut -d= -f1 | while read line; do
        export $line
    done
    $RUN_PARTS "/usr/lib/snf-image/tasks"
fi

cleanup
trap - EXIT

# never called...
exit 0

# vim: set sta sts=4 shiftwidth=4 sw=4 et ai :
