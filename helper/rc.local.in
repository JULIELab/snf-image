#!/bin/bash

# Copyright 2011 GRNET S.A. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#   1. Redistributions of source code must retain the above copyright
#      notice, this list of conditions and the following disclaimer.
#
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# The views and conclusions contained in the software and documentation are
# those of the authors and should not be interpreted as representing official
# policies, either expressed or implied, of GRNET S.A.

. @datarootdir@/@base_name@/common.sh

set -e

# terminate helper vm when the script exits
CLEANUP+=("telinit 0")

if [ ! -b $FLOPPY_DEV ]; then
    log_error "Floppy device is not present!"
fi

floppy=$(mktemp -d --tmpdir floppy.XXXXXXXX)
CLEANUP+=("rmdir $floppy")

mount $FLOPPY_DEV $floppy
CLEANUP+=("umount $floppy")

if [ -f $floppy/rules ]; then
    source $floppy/rules
else
    log_error "Floppy does not contain \`rules\' file"
fi

# Image mount point...
target=$(mktemp -d --tmpdir target.XXXXXXXX) || exit 1
CLEANUP+=("rmdir $target")

export SNF_IMAGE_TARGET=$target

if [ ! -d "/usr/lib/snf-image/tasks" ]; then
    log_error "snf-image/tasks directory is missing"
fi

RUN_PARTS=$(which run-parts)
if [ -z "$RUN_PARTS" ]; then
    log_error "run-parts programe is missing from the system"
fi

echo "Execute all snf-image tasks...." 
$RUN_PARTS -v --exit-on-error "/usr/lib/snf-image/tasks"

echo "SUCCESS" > $RESULT

cleanup
trap - EXIT

# never called...
exit 0

# vim: set sta sts=4 shiftwidth=4 sw=4 et ai :
